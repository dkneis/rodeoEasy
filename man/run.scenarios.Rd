% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.scenarios.r
\name{run.scenarios}
\alias{run.scenarios}
\title{Run a model, possibly for multiple scenarios}
\usage{
run.scenarios(
  model,
  times,
  scenarios = NULL,
  plot.vars = TRUE,
  plot.pros = FALSE,
  leg = "topright",
  ...
)
}
\arguments{
\item{model}{A model object returned by the \code{\link{build}} function.
See the examples below.}

\item{times}{Numeric vector defining the times for which the future
state of the system is computed.}

\item{scenarios}{Either \code{NULL} or a named list, each element of which
defines a scenario to be considered. In the latter case, list elements must
be (named) numeric vectors used to update the initial values and parameters
provided as defaults in the workbook from which the model was imported.
The vectors for the individual scenarios can differ in length but their
length could also be consistent across scenarios.
If \code{scenarios} is set to \code{NULL}, only the
default scenario will be run. See details and examples.}

\item{plot.vars}{Logical. Plot the dynamics of all state variables?}

\item{plot.pros}{Logical. Plot the dynamics of process rates?}

\item{leg}{Keyword to set the position of the legend (if plots are created).}

\item{...}{Possible optional arguments passed to the numerical solver,
namely \code{\link[deSolve]{lsoda}}. Can be used, for example, to limit
the maximum step size through the \code{hmax} argument if boundary
vary on short time scales.}
}
\value{
A data frame with at least three columns and one row for each
  time requested via the \code{times} argument. The first column
  indicates the scenario, the second column holds the time, and further
  columns hold the values of state variables and process rates.
}
\description{
The function executes a model for one to many scenarios and optionally
visualizes the outcome. Individual scenarios can differ by the initial state
or the values of parameters.
}
\note{
If the \code{scenarios} argument is used to update initial values and /
or parameters, the following applies: For each parameter not being included
  (by name) in the vector for a particular scenario, the default value
  will be used (as stored in the workbook from which the model was imported).
  The same is true for the initial values of variables. See the examples
  below.
}
\examples{

# build the model
m <- build(system.file("models/oxygen.xlsx", package="rodeoEasy"))

# implement specific functions used in RHS of ODE
DO_sat <- function(T) { exp(7.712 - 1.314 * log(T + 45.93)) }

# run with defaults
x <- run.scenarios(model=m, times=seq(0, 12, 0.1),
  scenarios=NULL
)

# run with updated values 
x <- run.scenarios(model=m, times=seq(0, 12, 0.1),
  scenarios=list(warm=c(kd=1.25), cold.windy=c(kd=1, ka=5))
)
}
\seealso{
Look at \code{\link{build}} for how to create the necessary input
  for the \code{model} argument.
}
\author{
David Kneis \email{david.kneis@tu-dresden.de}
}
